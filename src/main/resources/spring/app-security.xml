<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">
           
		<!-- <debug/> -->
		<!-- 该路径下的资源不用过滤，忽略静态资源文件 -->
		<http pattern="/home**" security="none" />
		<http pattern="/patent**" security="none" />
		<http pattern="/team**" security="none" />
		<http pattern="/brand**" security="none" />
		<http pattern="/static**" security="none"/>
		<http pattern="/favicon.ico" security="none" />
		
        <http auto-config="true" use-expressions="true" >
        
			<form-login login-page="/login"
						login-processing-url="/loginCheck"
						username-parameter="username"
						password-parameter="password"
						authentication-failure-url="/login?error=true"
						default-target-url="/admin/home"
						always-use-default-target="true" />
			<!-- logout element sets up a Ss filter that will invalidate a user session -->
			<logout logout-url="/logout"
					delete-cookies="JSESSIONID"
					logout-success-url="/login?logout"/>
			
			<!-- 在此处设置我们需要拦截的url (ant style)，本程序中，我们只拦截一个与admin有关的所有请求 -->
			<intercept-url pattern="/admin/switch_user" access="hasRole('ADMIN')" />
			<intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
			<remember-me user-service-ref="userDetailsService" ></remember-me>
			<custom-filter ref="digestFilter" before="BASIC_AUTH_FILTER"/>
			<custom-filter ref="switchUserProcessingFilter" position="SWITCH_USER_FILTER"/>
		</http>
		<!-- Registers the AuthenticationManager ，
			使用password-encoder 避免默认的 PlaintextPasswordEncoder，
			hash 可选：md4,  md5,  sha,  sha-256,  {sha},  {ssha}, 和  plaintext -->
		<authentication-manager alias="authenticationManager">
        	<authentication-provider user-service-ref="userDetailsService">
        		<password-encoder ref="passwordEncoder"/>
        	</authentication-provider>
    	</authentication-manager>
    	
		<beans:import resource="classpath:/spring/app-security-details.xml"/>
    	
<!-- =============================================== -->
	
		<!-- 允许全局使用注解方式配置，一般是对服务层进行设置
			@Secured，启用Spring 提供的一套注解
			 -->
		<!-- <global-method-security secured-annotations="enabled" /> -->
		
		<!-- @RolesAllowed，启用jsr 标准注解 -->
		<!-- <global-method-security jsr250-annotations="enabled" /> -->
		
		<!-- 启用SpEL,@PreFilter,@PreAuthorize,@PostFilter,@PostAuthorize -->
		<!-- <global-method-security pre-post-annotations="enabled" /> -->
		
		
</beans:beans>