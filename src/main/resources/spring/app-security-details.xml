<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns:b="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!-- 使用默认的编码器，默认的JdbcUserDetailsManager，可行。 -->
	<jdbc-user-service id="userDetailsService"
		data-source-ref="dataSource"
		users-by-username-query="select username,password,enabled from users where username = ?"
		authorities-by-username-query="select username,authority from authorities where username = ?"
		cache-ref="userCache" />
		
	<!-- org.springframework.security.authentication.encoding.PasswordEncoder
		default: PlaintextPasswordEncoder 纯文本密码格式 -->
	<b:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<b:constructor-arg value="256" />
	</b:bean>
	
	<!-- 用户切换，记得指定权限 -->
	<b:bean id="switchUserProcessingFilter" class="org.springframework.security.web.authentication.switchuser.SwitchUserFilter" autowire="byType">
		<b:property name="userDetailsService" ref="userDetailsService"></b:property>
		<b:property name="usernameParameter" value="username"></b:property>
		<b:property name="switchUserUrl" value="/switch_user"></b:property>
		<b:property name="exitUserUrl" value="/exit_user"></b:property>
        <b:property name="targetUrl" value="/admin/debug"/>
    </b:bean>

	<!-- Automatically receives AuthenticationEvent messages -->
    <b:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>

	<b:bean id="digestFilter"
		class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
		<b:property name="userDetailsService" ref="userDetailsService" />
		<b:property name="authenticationEntryPoint" ref="digestEntryPoint" />
	</b:bean>

	<b:bean id="digestEntryPoint"
		class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
		<b:property name="realmName" value="terrormovies-realm" />
		<b:property name="key" value="terrorific" />
	</b:bean>

	<!-- <b:bean id="userDetailsService"
		class="org.springframework.security.provisioning.JdbcUserDetailsManager">
	<b:property name="dataSource" ref="dataSource" />
	<b:property name="userCache" ref="userCache" />
	<b:property name="authenticationManager" ref="authenticationManager" />
	<b:property name="createUserSql">
		<b:value>
			insert into sys_users (name, password, status) values (?,?,?)
		</b:value>
	</b:property>
	<b:property name="deleteUserSql">
		<b:value>
			delete from sys_users where name = ?
		</b:value>
	</b:property>
	<b:property name="updateUserSql">
		<b:value>
			update sys_users set password = ?, status = ? where name = ?
		</b:value>
	</b:property>
	<b:property name="usersByUsernameQuery">
		<b:value> select name,password,status
			from sys_users where status='1' and name = ?
		</b:value>
	</b:property>
	<b:property name="authoritiesByUsernameQuery">
		<b:value> select u.name,r.name
			from sys_users u,sys_roles r,sys_users_roles ur where u.id=ur.user_id and
			r.id=ur.role_id and u.status='1' and u.name=?
		</b:value>
	</b:property>
</b:bean> -->


	<!-- security cache -->
	<b:bean id="securityCacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<b:property name="configLocation">
			<b:value>classpath:/spring/security-ehcache.xml</b:value>
		</b:property>
	</b:bean>
	<b:bean name="userCache"
		class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
		<b:property name="cache">
			<b:bean class="org.springframework.cache.ehcache.EhCacheFactoryBean"
				autowire="byName">
				<b:property name="cacheManager" ref="securityCacheManager" />
				<b:property name="cacheName" value="userCache" />
			</b:bean>
		</b:property>
	</b:bean>

</b:beans>